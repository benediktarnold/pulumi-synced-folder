// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package syncedfolder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GoogleCloudFolder struct {
	pulumi.ResourceState
}

// NewGoogleCloudFolder registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudFolder(ctx *pulumi.Context,
	name string, args *GoogleCloudFolderArgs, opts ...pulumi.ResourceOption) (*GoogleCloudFolder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BucketName == nil {
		return nil, errors.New("invalid value for required argument 'BucketName'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	var resource GoogleCloudFolder
	err := ctx.RegisterRemoteComponentResource("synced-folder:index:GoogleCloudFolder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type googleCloudFolderArgs struct {
	// The name of the Google Cloud Storage bucket to sync to (e.g., `my-bucket` in `gs://my-bucket`). Required.
	BucketName string `pulumi:"bucketName"`
	// Whether to have Pulumi manage files as individual cloud resources. Defaults to `true`.
	ManagedObjects *bool `pulumi:"managedObjects"`
	// The path (relative or fully-qualified) to the folder containing the files to be synced. Required.
	Path string `pulumi:"path"`
}

// The set of arguments for constructing a GoogleCloudFolder resource.
type GoogleCloudFolderArgs struct {
	// The name of the Google Cloud Storage bucket to sync to (e.g., `my-bucket` in `gs://my-bucket`). Required.
	BucketName pulumi.StringInput
	// Whether to have Pulumi manage files as individual cloud resources. Defaults to `true`.
	ManagedObjects pulumi.BoolPtrInput
	// The path (relative or fully-qualified) to the folder containing the files to be synced. Required.
	Path pulumi.StringInput
}

func (GoogleCloudFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudFolderArgs)(nil)).Elem()
}

type GoogleCloudFolderInput interface {
	pulumi.Input

	ToGoogleCloudFolderOutput() GoogleCloudFolderOutput
	ToGoogleCloudFolderOutputWithContext(ctx context.Context) GoogleCloudFolderOutput
}

func (*GoogleCloudFolder) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudFolder)(nil)).Elem()
}

func (i *GoogleCloudFolder) ToGoogleCloudFolderOutput() GoogleCloudFolderOutput {
	return i.ToGoogleCloudFolderOutputWithContext(context.Background())
}

func (i *GoogleCloudFolder) ToGoogleCloudFolderOutputWithContext(ctx context.Context) GoogleCloudFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudFolderOutput)
}

// GoogleCloudFolderArrayInput is an input type that accepts GoogleCloudFolderArray and GoogleCloudFolderArrayOutput values.
// You can construct a concrete instance of `GoogleCloudFolderArrayInput` via:
//
//          GoogleCloudFolderArray{ GoogleCloudFolderArgs{...} }
type GoogleCloudFolderArrayInput interface {
	pulumi.Input

	ToGoogleCloudFolderArrayOutput() GoogleCloudFolderArrayOutput
	ToGoogleCloudFolderArrayOutputWithContext(context.Context) GoogleCloudFolderArrayOutput
}

type GoogleCloudFolderArray []GoogleCloudFolderInput

func (GoogleCloudFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GoogleCloudFolder)(nil)).Elem()
}

func (i GoogleCloudFolderArray) ToGoogleCloudFolderArrayOutput() GoogleCloudFolderArrayOutput {
	return i.ToGoogleCloudFolderArrayOutputWithContext(context.Background())
}

func (i GoogleCloudFolderArray) ToGoogleCloudFolderArrayOutputWithContext(ctx context.Context) GoogleCloudFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudFolderArrayOutput)
}

// GoogleCloudFolderMapInput is an input type that accepts GoogleCloudFolderMap and GoogleCloudFolderMapOutput values.
// You can construct a concrete instance of `GoogleCloudFolderMapInput` via:
//
//          GoogleCloudFolderMap{ "key": GoogleCloudFolderArgs{...} }
type GoogleCloudFolderMapInput interface {
	pulumi.Input

	ToGoogleCloudFolderMapOutput() GoogleCloudFolderMapOutput
	ToGoogleCloudFolderMapOutputWithContext(context.Context) GoogleCloudFolderMapOutput
}

type GoogleCloudFolderMap map[string]GoogleCloudFolderInput

func (GoogleCloudFolderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GoogleCloudFolder)(nil)).Elem()
}

func (i GoogleCloudFolderMap) ToGoogleCloudFolderMapOutput() GoogleCloudFolderMapOutput {
	return i.ToGoogleCloudFolderMapOutputWithContext(context.Background())
}

func (i GoogleCloudFolderMap) ToGoogleCloudFolderMapOutputWithContext(ctx context.Context) GoogleCloudFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudFolderMapOutput)
}

type GoogleCloudFolderOutput struct{ *pulumi.OutputState }

func (GoogleCloudFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudFolder)(nil)).Elem()
}

func (o GoogleCloudFolderOutput) ToGoogleCloudFolderOutput() GoogleCloudFolderOutput {
	return o
}

func (o GoogleCloudFolderOutput) ToGoogleCloudFolderOutputWithContext(ctx context.Context) GoogleCloudFolderOutput {
	return o
}

type GoogleCloudFolderArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GoogleCloudFolder)(nil)).Elem()
}

func (o GoogleCloudFolderArrayOutput) ToGoogleCloudFolderArrayOutput() GoogleCloudFolderArrayOutput {
	return o
}

func (o GoogleCloudFolderArrayOutput) ToGoogleCloudFolderArrayOutputWithContext(ctx context.Context) GoogleCloudFolderArrayOutput {
	return o
}

func (o GoogleCloudFolderArrayOutput) Index(i pulumi.IntInput) GoogleCloudFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GoogleCloudFolder {
		return vs[0].([]*GoogleCloudFolder)[vs[1].(int)]
	}).(GoogleCloudFolderOutput)
}

type GoogleCloudFolderMapOutput struct{ *pulumi.OutputState }

func (GoogleCloudFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GoogleCloudFolder)(nil)).Elem()
}

func (o GoogleCloudFolderMapOutput) ToGoogleCloudFolderMapOutput() GoogleCloudFolderMapOutput {
	return o
}

func (o GoogleCloudFolderMapOutput) ToGoogleCloudFolderMapOutputWithContext(ctx context.Context) GoogleCloudFolderMapOutput {
	return o
}

func (o GoogleCloudFolderMapOutput) MapIndex(k pulumi.StringInput) GoogleCloudFolderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GoogleCloudFolder {
		return vs[0].(map[string]*GoogleCloudFolder)[vs[1].(string)]
	}).(GoogleCloudFolderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudFolderInput)(nil)).Elem(), &GoogleCloudFolder{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudFolderArrayInput)(nil)).Elem(), GoogleCloudFolderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudFolderMapInput)(nil)).Elem(), GoogleCloudFolderMap{})
	pulumi.RegisterOutputType(GoogleCloudFolderOutput{})
	pulumi.RegisterOutputType(GoogleCloudFolderArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudFolderMapOutput{})
}
